name: DevOps Course Project main workflow
on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

    Check-Style-Lint-flake8:
      runs-on: ubuntu-latest
      steps:
        - name: Setup Python
          uses: actions/setup-python@v1
          with:
            python-version: '3.10'
            architecture: x64

        - name: Checkout
          uses: actions/checkout@v4

        - name: Install flake8
          run: pip install flake8

        - name: Run flake8
          uses: suo/flake8-github-action@releases/v1
          with:
            checkName: 'Check-Style-Lint-flake8'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    Check-Makrdown-Files:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Markdown Lint changelog file
        uses: avto-dev/markdown-lint@v1
        with:
          rules: '/lint/rules/changelog.js'
          config: '/lint/config/changelog.yml'
          args: './CHANGELOG.md'


    Check-Links-In-Markdown-Files:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check link in markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1


    Check-Editorconfig:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run editorconfig-checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run editorconfig-checker
        run: editorconfig-checker


    Check-Python-Style:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python Style Checker
        uses: andymckay/pycodestyle-action@0.1.3


    Spellcheck:
      runs-on: ubuntu-latest
      steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: SpellCheck
        uses: rojopolis/spellcheck-github-actions@0.11.0
        with:
          source_files: '**/*.md'
          task_name: Markdown


    Build-And-Publish-Docker-Image:
      name: Publish the docker image
      runs-on: ubuntu-latest
      # needs: Trivy-Scan-And-Build
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build docker image
          run: docker build -t devopscourseproject ./src

        - name: Add tag to docker image
          run: docker tag devopscourseproject ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject

        - name: Publish to DockerHub
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject

    # Build-And-Trivy-Scan:
    #   runs-on: ubuntu-latest
    #   steps:
    #   - name: Checkout
    #     uses: actions/checkout@v3

    #   - name: Build the Docker image
    #     run: docker build -t devopscourseproject src/

    #   - name: Scan built Docker image with Trivy
    #     uses: aquasecurity/trivy-action@master
    #     with:
    #       image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject'
    #       exit-code: '1'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       format: 'template'
    #       template: '@/contrib/sarif.tpl'
    #       output: 'trivy-results.sarif'
    #       severity: 'CRITICAL,HIGH'

    # Publish:
    #   runs-on: ubuntu-latest
    #   steps:
    #   - name: Checkout
    #     uses: actions/checkout@v3

    #   - name: Build the Docker image
    #     run: docker build -t devopscourseproject src/

    #   - name: Login to DockerHub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}

    #   - name: Add tag to the Docker image
    #     run: docker tag devopscourseproject ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject

    #   - name: Publish the Docker image
    #     run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject


    # Build-And-Publish-Docker-Image:
    #   name: Build & push docker image
    #   runs-on: ubuntu-latest
    #   env:
    #     IMG_NAME: ${{ github.repository }}
    #   steps:
    #     - name: Checkout
    #       uses: actions/checkout@v4

    #     - name: Debug
    #       run: |
    #         echo "github.ref -> {{ github.ref }}"

    #     - name: Docker metadata
    #       id: metadata
    #       uses: docker/metadata-action@v3
    #       with:
    #         images: ${{ env.IMG_NAME }}
    #         tags: |
    #           type=semver,pattern={{version}}
    #           type=semver,pattern={{major}}.{{minor}}
    #           type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

    #     - name: Login to Docker Hub
    #       uses: docker/login-action@v3
    #       with:
    #         username: ${{ secrets.DOCKERHUB_USERNAME }}
    #         password: ${{ secrets.DOCKERHUB_TOKEN }}

    #     - name: Set up Docker Buildx
    #       uses: docker/setup-buildx-action@v3

    #     - name: Build and push Docker image
    #       uses: docker/build-push-action@v5
    #       with:
    #         context: .
    #         file: ./Dockerfile
    #         push: true
    #         tags: ${{ steps.metadata.outputs.tags }}
    #         labels: ${{ steps.metadata.outputs.labels }}