name: DevOps Course Project main workflow
on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
    Check-Style-Lint-flake8:
      name: Lint flake8 check style
      runs-on: ubuntu-latest
      steps:
        - name: Setup Python
          uses: actions/setup-python@v1
          with:
            python-version: '3.10'
            architecture: x64

        - name: Checkout
          uses: actions/checkout@v4

        - name: Install flake8
          run: pip install flake8

        - name: Run flake8
          uses: suo/flake8-github-action@releases/v1
          with:
            checkName: 'Check-Style-Lint-flake8'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    Check-Makrdown-Files:
      name: Check markdown files style
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Markdown Lint changelog file
        uses: avto-dev/markdown-lint@v1
        with:
          rules: '/lint/rules/changelog.js'
          config: '/lint/config/changelog.yml'
          args: './CHANGELOG.md'


    Check-Links-In-Markdown-Files:
      name: Check links in markdown files
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check link in markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1


    Check-Editorconfig:
      name: Check editorconfig
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run editorconfig-checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run editorconfig-checker
        run: editorconfig-checker


    Check-Python-Style:
      name: Check python files style
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python Style Checker
        uses: andymckay/pycodestyle-action@0.1.3


    Spellcheck:
      name: Check spelling
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SpellCheck
        uses: rojopolis/spellcheck-github-actions@0.11.0
        with:
          source_files: '**/*.md'
          task_name: Markdown


    Run-Unit-Tests:
      name: Run unit tests
      runs-on: ubuntu-latest
      needs: [Check-Style-Lint-flake8,Check-Makrdown-Files,Check-Links-In-Markdown-Files,Check-Editorconfig,Check-Python-Style,Spellcheck]
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip3 install -r src/requirements.txt

      - name: Run unit tests
        run: python3 -m unittest src/app_test.py


    Database-Migrations:
      name: Database migrations check
      runs-on: ubuntu-latest
      needs: [Check-Style-Lint-flake8,Check-Makrdown-Files,Check-Links-In-Markdown-Files,Check-Editorconfig,Check-Python-Style,Spellcheck]
      services:
        postgres:
          image: postgres
          env:
            POSTGRES_DB: db
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Flyway migration
          uses: joshuaavalon/flyway-action@v3.0.0
          with:
            url: jdbc:postgresql://postgres:5432/db
            user: user
            password: password

        - name: Print completed
          run: echo 'Completed'


    Snyk-Code-Scan:
      name: Snyk scan for vulnerabilities
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Run snyk scan
          working-directory: ${{github.workspace}}/src
          run: |
              pip3 install -r requirements.txt
              npm install snyk -g
              snyk auth ${{ secrets.SNYK_TOKEN }}
              snyk test


    Sonarcloud-Code-Scan:
      name: SonarCloud scan
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


    SpectralOps-Vulnerability-Scan:
      name: Spectral Code Scan
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Install and run Spectral CI
          uses: spectralops/spectral-github-action@v4
          with:
            spectral-dsn: ${{ secrets.SPECTRAL_DSN }}
            spectral-args: scan --ok


    Bandit-SAST-Checker:
      name: Bandit Vulnerability Checker
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Bandit Scan
          uses: jpetrucciani/bandit-check@main
          with:
            path: '.'


    Git-Leaks-Scan:
      name: Git leaks scan
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Check for gitleaks
          uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    Bearer-Code-Scan:
      name: Bearer Code Scanner
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Bearer code scan
          uses: bearer/bearer-action@v2


    Semgrep-Code-Scan:
      name: Semgrep Code Scanner
      runs-on: ubuntu-latest
      needs: [Run-Unit-Tests,Database-Migrations]
      container:
        image: returntocorp/semgrep
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: full scan
          run: |
            semgrep \
              --sarif --output report.sarif \
              --metrics=off \
              --config="p/default"


    Trivy-Scan-And-Build:
      name: Trivy scan
      runs-on: ubuntu-latest
      needs: [Snyk-Code-Scan,Sonarcloud-Code-Scan,SpectralOps-Vulnerability-Scan,Bandit-SAST-Checker,Git-Leaks-Scan,Bearer-Code-Scan,Semgrep-Code-Scan]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Run Trivy vulnerability scanner in fs mode
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'fs'
            scan-ref: '.'
            trivy-config: trivy.yaml


    Build-And-Publish-Docker-Image:
      name: Publish the docker image
      runs-on: ubuntu-latest
      needs: [Trivy-Scan-And-Build]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build docker image
          run: docker build -t devopscourseproject src/

        - name: Add tag to docker image
          run: docker tag devopscourseproject ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject

        - name: Publish to DockerHub
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/devopscourseproject

    # Build-And-Publish-Docker-Image:
    #   name: Build & push docker image
    #   runs-on: ubuntu-latest
    #   env:
    #     IMG_NAME: ${{ github.repository }}
    #   steps:
    #     - name: Checkout
    #       uses: actions/checkout@v4

    #     - name: Debug
    #       run: |
    #         echo "github.ref -> {{ github.ref }}"

    #     - name: Docker metadata
    #       id: metadata
    #       uses: docker/metadata-action@v3
    #       with:
    #         images: ${{ env.IMG_NAME }}
    #         tags: |
    #           type=semver,pattern={{version}}
    #           type=semver,pattern={{major}}.{{minor}}
    #           type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

    #     - name: Login to Docker Hub
    #       uses: docker/login-action@v3
    #       with:
    #         username: ${{ secrets.DOCKERHUB_USERNAME }}
    #         password: ${{ secrets.DOCKERHUB_TOKEN }}

    #     - name: Set up Docker Buildx
    #       uses: docker/setup-buildx-action@v3

    #     - name: Build and push Docker image
    #       uses: docker/build-push-action@v5
    #       with:
    #         context: .
    #         file: ./Dockerfile
    #         push: true
    #         tags: ${{ steps.metadata.outputs.tags }}
    #         labels: ${{ steps.metadata.outputs.labels }}
